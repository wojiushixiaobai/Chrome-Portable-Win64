on:

  push:
    branches:
      - master
  schedule:
    - cron: '0 1 * * *'

name: Checkout and Create Release Version

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Chrome version
        id: setup-chrome
        run: |
          version=$(curl --silent "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r '.channels.Stable.version')
          echo "chrome-version=${version}" >> $GITHUB_OUTPUT

      - name: Create Tag
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a ${{ steps.setup-chrome.outputs.chrome-version }} -m "Release Version ${{ steps.setup-chrome.outputs.chrome-version }}"
          git push origin ${{ steps.setup-chrome.outputs.chrome-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Files
        run: |
          for file in $(curl --silent "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r '.channels.Stable.downloads.chrome[].url'); do wget "${file}"; done
          for file in $(curl --silent "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r '.channels.Stable.downloads.chromedriver[].url'); do wget "${file}"; done

      - name: Create Release
        run: |
          gh release create ${{ steps.setup-chrome.outputs.chrome-version }} --notes "Release ${{ steps.setup-chrome.outputs.chrome-version }}"
          gh release upload ${{ steps.setup-chrome.outputs.chrome-version }} *.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}